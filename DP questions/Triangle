int t[201][300];
    int f(int i,int j,vector<vector<int>>& triangle){
        int n=triangle.size();
        if(i==n-1)
            return triangle[i][j];
        if(t[i][j]!=-1)
        return t[i][j];
        int a=triangle[i][j]+f(i+1,j,triangle);
        int b=triangle[i][j]+f(i+1,j+1,triangle);
        return t[i][j]=min(a,b);
    }
    
    int minimumTotal(vector<vector<int>>& triangle) {
        memset(t,-1,sizeof(t));
        return f(0,0,triangle);
    }
    
    int minimumTotal(vector<vector<int>>& triangle) {
        int n=triangle.size();
        vector<vector<int>>dp(n,vector<int>(n,0));
        for(int i=0;i<triangle[n-1].size();i++)
            dp[n-1][i]=triangle[n-1][i];
        for(int i=n-2;i>=0;i--){
            for(int j=0;j<triangle[i].size();j++)
            {
                int a=triangle[i][j]+dp[i+1][j];
                int b=triangle[i][j]+dp[i+1][j+1];
                dp[i][j]=min(a,b);
            }
        }
        return dp[0][0];
    }
