class Solution {
public:
    
    bool isSafe(int i,int j,int n,int m,vector<vector<int>>& mat){
        if(i>=0 && i<n && j>=0 && j<m)
            return true;
        return false;
    }
    
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        int n=mat.size();
        int m=mat[0].size();
        queue<pair<pair<int,int>,int>>q;
        vector<vector<int>>ans(n,vector<int>(m));
        vector<vector<bool>>vis(n,vector<bool>(m,false));
        for(int i=0;i<n;i++){
         for(int j=0;j<m;j++){
             if(mat[i][j]==0){
                 q.push({{i,j},0});
                 vis[i][j]=true;
             }
         }   
        }
        int ax[4]={1,0,-1,0};
        int ay[4]={0,1,0,-1};
        while(!q.empty()){
            int x=q.front().first.first;
            int y=q.front().first.second;
            int d=q.front().second;
            q.pop();
            ans[x][y]=d;
            for(int i=0;i<4;i++){
                int nx=x+ax[i];
                int ny=y+ay[i];
                if(isSafe(nx,ny,n,m,mat) && !vis[nx][ny]){
                    vis[nx][ny]=true;
                    q.push({{nx,ny},d+1});
                }
            }
        }
        return ans;
    }
};
